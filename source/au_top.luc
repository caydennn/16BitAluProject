module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  
  sig rst;                  // reset signal
  
  value_store valuestorer;
  
  // Instantiate alu 
  alu myalu; 
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    usb_tx = usb_rx;        // loop serial port 
    led = 8h00;             // turn LEDs off
    io_led = 3x{{8h00}};    // turn LEDs off
    
    
    // Show error if OVERFLOW 
    case(myalu.zvn[1]){
      0:
        io_sel = 4hf;
        io_seg=8hff;
      1:
        io_sel = 4b1011;
        io_seg=8b10000110;
        
      default: 
        io_sel = 4hf;
        io_seg=8hff;
    }
    
 
    // Assign Value storer values to store 
    valuestorer.clk = clk;
    valuestorer.btna = io_button[3];
    valuestorer.btnb = io_button[4];
    valuestorer.values[7:0] = io_dip[0];
    valuestorer.values[15:8] = io_dip[1];
    valuestorer.rst = io_button[2]; 
      
    // Map alufn signals to the left most io_dip
    myalu.alufn_signal = io_dip[2][5:0];
    myalu.a = valuestorer.outA; 
    myalu.b = valuestorer.outB; 
    
    // Show ALUFN input on io_led[2] 
    io_led[2][5:0] = io_dip[2][5:0];
    
    // Show ALU output on io_led[0] and io_led[1] 
    io_led[0][7:0] = myalu.out[7:0];
    io_led[1][7:0] = myalu.out[15:8];
    
  }
}